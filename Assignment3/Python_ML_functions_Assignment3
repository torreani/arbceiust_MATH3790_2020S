{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "coursera": {
      "course_slug": "neural-networks-deep-learning",
      "graded_item_id": "XHpfv",
      "launcher_item_id": "Zh0CU"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.6"
    },
    "colab": {
      "name": "Copy of Python_ML_functions_Assignment3.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "88cd31dfd2c745329e7e60a02fd10125": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d14ab764206546b09235192d63dfbdae",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2e35136e076d4e999731e2cbac86fd6f",
              "IPY_MODEL_e565a7ed80e84209a67849768ad227f4",
              "IPY_MODEL_665d318384224c6bbbeb3451d0e78af6"
            ]
          }
        },
        "d14ab764206546b09235192d63dfbdae": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2e35136e076d4e999731e2cbac86fd6f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_a14588d778324b3a84d29398009515a9",
            "_dom_classes": [],
            "description": "Angle 1",
            "step": 10,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 180,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 20,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": -180,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_54e892acfa96419294c5e6dd197eed03"
          }
        },
        "e565a7ed80e84209a67849768ad227f4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_f8cfda3f065942aba02c6a57ef3c8925",
            "_dom_classes": [],
            "description": "Angle 2",
            "step": 10,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 180,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 50,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": -180,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6e4ee81400694e1aba74774354e2448d"
          }
        },
        "665d318384224c6bbbeb3451d0e78af6": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [
              {
                "output_type": "display_data",
                "metadata": {
                  "tags": []
                },
                "text/plain": "<Figure size 576x288 with 0 Axes>"
              },
              {
                "output_type": "display_data",
                "metadata": {
                  "tags": []
                },
                "image/png": "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\n",
                "text/plain": "<Figure size 864x864 with 2 Axes>"
              }
            ],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_c5c2ef7e30e64a08918ea019fcda057d",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "a14588d778324b3a84d29398009515a9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "54e892acfa96419294c5e6dd197eed03": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f8cfda3f065942aba02c6a57ef3c8925": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6e4ee81400694e1aba74774354e2448d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wuhM2OfZHhkY",
        "colab_type": "text"
      },
      "source": [
        "## ML functions: Implementation in Python (Due: 2/28/20 - Friday)\n",
        "\n",
        "- In this third programming assignment, you will be implementing some important functions and algorithms used in machine learning. This assignment will help reinforce the basics of Python\n",
        "\n",
        "**Instructions:**\n",
        "- You will be using Python 3.\n",
        "- Avoid using for-loops and while-loops, unless you are explicitly told to do so.\n",
        "- Do not modify the (# GRADED FUNCTION [function name]) comment in some cells. Your work would not be graded if you change this. Each cell containing that comment should only contain one function.\n",
        "- After coding your function, run the cell right below it to check if your result is correct.\n",
        "\n",
        "**After this assignment you will:**\n",
        "- Understand the concept of \"broadcasting\"\n",
        "- Be able to vectorize code\n",
        "- Be familiar with the 'sigmoid function\"\n",
        "- Be familiar with the gradient descent algorithm  to optimize a function\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qThs9JG0HhkY",
        "colab_type": "text"
      },
      "source": [
        "## Note on completing this assignment ##\n",
        "You only need to write code between the ### START CODE HERE ### and ### END CODE HERE ### comments. After writing your code, you can run the cell by either pressing \"SHIFT\"+\"ENTER\" or by clicking on \"Run Cell\" (denoted by a play symbol) in the upper bar of the notebook. \n",
        "\n",
        "We will often specify \"(≈ X lines of code)\" in the comments to tell you about how much code you need to write. It is just a rough estimate, so don't feel bad if your code is longer or shorter.\n",
        "\n",
        "**Exercise**: Set test to `\"Hello World\"` in the cell below to print \"Hello World\" and run the two cells below."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NAPXv-MzHhkZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "### START CODE HERE ### (≈ 1 line of code)\n",
        "test = 'Hello world'\n",
        "### END CODE HERE ###"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fjSZiUJ2Hhkc",
        "colab_type": "code",
        "outputId": "33b2efb0-a375-4d21-bef1-d87c57cb65a7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "print (\"test: \" + test)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "test: Hello world\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8tVUNKCNHhkf",
        "colab_type": "text"
      },
      "source": [
        "**Expected output**:\n",
        "test: Hello World"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Zy-Mt78gHhkg",
        "colab_type": "text"
      },
      "source": [
        "<font color='blue'>\n",
        "**What you need to remember**:\n",
        "- Run your cells using SHIFT+ENTER (or \"Run cell\")\n",
        "- Write code in the designated areas using Python 3 only\n",
        "- Do not modify the code outside of the designated areas"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GNASiADvHhkg",
        "colab_type": "text"
      },
      "source": [
        "## 1 - Building basic functions with numpy ##\n",
        "\n",
        "Numpy is the main package for scientific computing in Python. It is maintained by a large community (www.numpy.org). In this exercise you will learn several key numpy functions such as np.exp, np.log, and np.reshape. You will need to know how to use these functions for future assignments.\n",
        "\n",
        "### 1.1 - sigmoid function, np.exp() ###\n",
        "\n",
        "Before using np.exp(), you will use math.exp() to implement the sigmoid function. You will then see why np.exp() is preferable to math.exp().\n",
        "\n",
        "#### <font color=blue> **Exercise 1**: </font> Build a function that returns the sigmoid of a real number x. Use math.exp(x) for the exponential function.\n",
        "\n",
        "**Reminder**:\n",
        "$sigmoid(x) = \\frac{1}{1+e^{-x}}$ is sometimes also known as the logistic function. It is a non-linear function used not only in Machine Learning (Logistic Regression), but also in Deep Learning.\n",
        "\n",
        "<img src=\"Sigmoid.png\" style=\"width:500px;height:400px;\">\n",
        "\n",
        "To refer to a function belonging to a specific package you could call it using package_name.function(). Run the code below to see an example with math.exp()."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RSmJXSgsHhkh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: basic_sigmoid\n",
        "\n",
        "import math\n",
        "\n",
        "def basic_sigmoid(x):\n",
        "    \"\"\"\n",
        "    Compute sigmoid of x.\n",
        "\n",
        "    Arguments:\n",
        "    x -- A scalar\n",
        "\n",
        "    Return:\n",
        "    s -- sigmoid(x)\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 1 line of code)\n",
        "    s = 1 / (1 + math.exp(-x))\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return s"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R8qQlVhdHhkk",
        "colab_type": "code",
        "outputId": "a8ed3d1c-76b0-4856-8b0d-3bebe69a29f2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "basic_sigmoid(3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9525741268224334"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E-AoLiaKHhkm",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "<table style = \"width:40%\">\n",
        "    <tr>\n",
        "    <td>** basic_sigmoid(3) **</td> \n",
        "        <td>0.9525741268224334 </td> \n",
        "    </tr>\n",
        "\n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f7X7iTv0Hhkm",
        "colab_type": "text"
      },
      "source": [
        "Actually, we rarely use the \"math\" library in deep learning because the inputs of the functions are real numbers. In deep learning we mostly use matrices and vectors. This is why numpy is more useful. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jzW89fKeHhkn",
        "colab_type": "code",
        "outputId": "d99ba62a-9dce-46a1-b764-4e91fc0a6077",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        }
      },
      "source": [
        "### One reason why we use \"numpy\" instead of \"math\" in Deep Learning ###\n",
        "x = [1, 2, 3]\n",
        "basic_sigmoid(x) # you will see this give an error when you run it, because x is a vector."
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-6-0468e34d7ed7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mbasic_sigmoid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# you will see this give an error when you run it, because x is a vector.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-4-ef60198734ee>\u001b[0m in \u001b[0;36mbasic_sigmoid\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0;31m### START CODE HERE ### (≈ 1 line of code)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m     \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mmath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m     \u001b[0;31m### END CODE HERE ###\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: bad operand type for unary -: 'list'"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lDemQlGKHhkq",
        "colab_type": "text"
      },
      "source": [
        "In fact, if $ x = (x_1, x_2, ..., x_n)$ is a row vector then $np.exp(x)$ will apply the exponential function to every element of x. The output will thus be: $np.exp(x) = (e^{x_1}, e^{x_2}, ..., e^{x_n})$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j0jXEjlSHhkq",
        "colab_type": "code",
        "outputId": "bf52343f-c82e-4b45-92f6-a06309716595",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "# example of np.exp\n",
        "x = np.array([1, 2, 3])\n",
        "print(np.exp(x)) # result is (exp(1), exp(2), exp(3))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 2.71828183  7.3890561  20.08553692]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VZV75gGVHhks",
        "colab_type": "text"
      },
      "source": [
        "Furthermore, if x is a vector, then a Python operation such as $s = x + 3$ or $s = \\frac{1}{x}$ will output s as a vector of the same size as x."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u6as8xqkHhkt",
        "colab_type": "code",
        "outputId": "5d738099-c469-4ca6-d2ea-1a9940d558c4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "# example of vector operation\n",
        "x = np.array([1, 2, 3])\n",
        "print (x + 3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[4 5 6]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v1IMM0QRHhkv",
        "colab_type": "text"
      },
      "source": [
        "Any time you need more info on a numpy function, we encourage you to look at [the official documentation](https://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.exp.html). \n",
        "\n",
        "You can also create a new cell in the notebook and write `np.exp?` (for example) to get quick access to the documentation.\n",
        "\n",
        "#### <font color=blue> **Exercise 2**: </font> Now implement the sigmoid function using numpy. \n",
        "\n",
        "**Instructions**: x could now be either a real number, a vector, or a matrix. The data structures we use in numpy to represent these shapes (vectors, matrices...) are called numpy arrays. You don't need to know more for now.\n",
        "$$ \\text{For } x \\in \\mathbb{R}^n \\text{,     } sigmoid(x) = sigmoid(\\begin{pmatrix}\n",
        "    x_1  \\\\\n",
        "    x_2  \\\\\n",
        "    ...  \\\\\n",
        "    x_n  \\\\\n",
        "\\end{pmatrix}) = \\begin{pmatrix}\n",
        "    \\frac{1}{1+e^{-x_1}}  \\\\\n",
        "    \\frac{1}{1+e^{-x_2}}  \\\\\n",
        "    ...  \\\\\n",
        "    \\frac{1}{1+e^{-x_n}}  \\\\\n",
        "\\end{pmatrix}\\tag{1} $$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nqR5dLCWHhkw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: sigmoid\n",
        "\n",
        "import numpy as np # this means you can access numpy functions by writing np.function() instead of numpy.function()\n",
        "\n",
        "def sigmoid(x):\n",
        "    \"\"\"\n",
        "    Compute the sigmoid of x\n",
        "\n",
        "    Arguments:\n",
        "    x -- A scalar or numpy array of any size\n",
        "\n",
        "    Return:\n",
        "    s -- sigmoid(x)\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 1 line of code)\n",
        "    s = 1/(1 + np.exp(-x)) \n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return s"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nleVX_l1Hhkz",
        "colab_type": "code",
        "outputId": "cccbecbc-8641-42cc-b47c-92c17a6b26f8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "x = np.array([1, 2, 3])\n",
        "sigmoid(x)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.73105858, 0.88079708, 0.95257413])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8C9w3H3vHhk6",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "<table>\n",
        "    <tr> \n",
        "        <td> **sigmoid([1,2,3])**</td> \n",
        "        <td> array([ 0.73105858,  0.88079708,  0.95257413]) </td> \n",
        "    </tr>\n",
        "</table> \n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XATw7AQbHhk6",
        "colab_type": "text"
      },
      "source": [
        "### 1.2 - Sigmoid gradient\n",
        "\n",
        "As you've seen in lecture, you will need to compute gradients to optimize loss functions using backpropagation. Let's code your first gradient function.\n",
        "\n",
        "#### <font color=blue> **Exercise 3**: </font> Implement the function sigmoid_grad() to compute the gradient of the sigmoid function with respect to its input x. The formula is: $$sigmoid\\_derivative(x) = \\sigma'(x) = \\sigma(x) (1 - \\sigma(x))\\tag{2}$$\n",
        "You often code this function in two steps:\n",
        "1. Set s to be the sigmoid of x. You might find your sigmoid(x) function useful.\n",
        "2. Compute $\\sigma'(x) = s(1-s)$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o7bkxoT2Hhk7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: sigmoid_derivative\n",
        "\n",
        "def sigmoid_derivative(x):\n",
        "    \"\"\"\n",
        "    Compute the gradient (also called the slope or derivative) of the sigmoid function with respect to its input x.\n",
        "    You can store the output of the sigmoid function into variables and then use it to calculate the gradient.\n",
        "    \n",
        "    Arguments:\n",
        "    x -- A scalar or numpy array\n",
        "\n",
        "    Return:\n",
        "    ds -- Your computed gradient.\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 2 lines of code)\n",
        "    s = 1/(1 + np.exp(-x)) \n",
        "    ds = s * (1 - s)\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return ds"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DB5fvEmwHhk9",
        "colab_type": "code",
        "outputId": "fa2eb4d1-3d9d-43ac-de53-f069830ea2a3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "x = np.array([1, 2, 3])\n",
        "print (\"sigmoid_derivative(x) = \" + str(sigmoid_derivative(x)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "sigmoid_derivative(x) = [0.19661193 0.10499359 0.04517666]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AUGXyv8oHhlA",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "\n",
        "\n",
        "<table>\n",
        "    <tr> \n",
        "        <td> **sigmoid_derivative([1,2,3])**</td> \n",
        "        <td> [ 0.19661193  0.10499359  0.04517666] </td> \n",
        "    </tr>\n",
        "</table> \n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1I5Ll2zlHhlF",
        "colab_type": "text"
      },
      "source": [
        "### 1.3 - Reshaping arrays ###\n",
        "\n",
        "Two common numpy functions used in deep learning are [np.shape](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.shape.html) and [np.reshape()](https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html). \n",
        "- X.shape is used to get the shape (dimension) of a matrix/vector X. \n",
        "- X.reshape(...) is used to reshape X into some other dimension. \n",
        "\n",
        "For example, in computers, an image is typically stored as a 3D array of shape $(length, height, depth = 3)$. However, when you read an image as the input of an algorithm you convert it to a vector of shape $(length*height*3, 1)$. In other words, you \"unroll\", or reshape, the 3D array into a 1D vector.\n",
        "\n",
        "<img src=\"image2vector_kiank.png\" style=\"width:500px;height:300;\">\n",
        "\n",
        "#### <font color=blue> **Exercise 4**: </font> Implement `image2vector()` that takes an input of shape (length, height, 3) and returns a vector of shape (length\\*height\\*3, 1). For example, if you would like to reshape an array v of shape (a, b, c) into a vector of shape (a*b,c) you would do:\n",
        "``` python\n",
        "v = v.reshape((v.shape[0]*v.shape[1], v.shape[2])) # v.shape[0] = a ; v.shape[1] = b ; v.shape[2] = c\n",
        "```\n",
        "- Please don't hardcode the dimensions of image as a constant. Instead look up the quantities you need with `image.shape[0]`, etc. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S41PkKjbHhlG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: image2vector\n",
        "def image2vector(image):\n",
        "    \"\"\"\n",
        "    Argument:\n",
        "    image -- a numpy array of shape (length, height, depth)\n",
        "    \n",
        "    Returns:\n",
        "    v -- a vector of shape (length*height*depth, 1)\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 1 line of code)\n",
        "    v = image.reshape((image.shape[0] * image.shape[1] * image.shape[2],1))\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return v"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qN_orfAhHhlJ",
        "colab_type": "code",
        "outputId": "eca256fe-bb25-4eaf-97ad-e4871802080d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 310
        }
      },
      "source": [
        "# This is a 3 by 3 by 2 array, typically images will be (num_px_x, num_px_y,3) where 3 represents the RGB values\n",
        "image = np.array([[[ 0.67826139,  0.29380381],\n",
        "        [ 0.90714982,  0.52835647],\n",
        "        [ 0.4215251 ,  0.45017551]],\n",
        "\n",
        "       [[ 0.92814219,  0.96677647],\n",
        "        [ 0.85304703,  0.52351845],\n",
        "        [ 0.19981397,  0.27417313]],\n",
        "\n",
        "       [[ 0.60659855,  0.00533165],\n",
        "        [ 0.10820313,  0.49978937],\n",
        "        [ 0.34144279,  0.94630077]]])\n",
        "\n",
        "print (\"image2vector(image) = \" + str(image2vector(image)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "image2vector(image) = [[0.67826139]\n",
            " [0.29380381]\n",
            " [0.90714982]\n",
            " [0.52835647]\n",
            " [0.4215251 ]\n",
            " [0.45017551]\n",
            " [0.92814219]\n",
            " [0.96677647]\n",
            " [0.85304703]\n",
            " [0.52351845]\n",
            " [0.19981397]\n",
            " [0.27417313]\n",
            " [0.60659855]\n",
            " [0.00533165]\n",
            " [0.10820313]\n",
            " [0.49978937]\n",
            " [0.34144279]\n",
            " [0.94630077]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "amRvkA2XHhlM",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "\n",
        "\n",
        "<table style=\"width:100%\">\n",
        "     <tr> \n",
        "       <td> **image2vector(image)** </td> \n",
        "       <td> [[ 0.67826139]\n",
        " [ 0.29380381]\n",
        " [ 0.90714982]\n",
        " [ 0.52835647]\n",
        " [ 0.4215251 ]\n",
        " [ 0.45017551]\n",
        " [ 0.92814219]\n",
        " [ 0.96677647]\n",
        " [ 0.85304703]\n",
        " [ 0.52351845]\n",
        " [ 0.19981397]\n",
        " [ 0.27417313]\n",
        " [ 0.60659855]\n",
        " [ 0.00533165]\n",
        " [ 0.10820313]\n",
        " [ 0.49978937]\n",
        " [ 0.34144279]\n",
        " [ 0.94630077]]</td> \n",
        "     </tr>\n",
        "    \n",
        "   \n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bHC-6HoAHhlP",
        "colab_type": "text"
      },
      "source": [
        "### 1.4 - Normalizing rows\n",
        "\n",
        "Another common technique we use in Machine Learning and Deep Learning is to normalize our data. It often leads to a better performance because gradient descent converges faster after normalization. Here, by normalization we mean changing x to $ \\frac{x}{\\| x\\|} $ (dividing each row vector of x by its norm).\n",
        "\n",
        "For example, if $$x = \n",
        "\\begin{bmatrix}\n",
        "    0 & 3 & 4 \\\\\n",
        "    2 & 6 & 4 \\\\\n",
        "\\end{bmatrix}\\tag{3}$$ then $$\\| x\\| = np.linalg.norm(x, axis = 1, keepdims = True) = \\begin{bmatrix}\n",
        "    5 \\\\\n",
        "    \\sqrt{56} \\\\\n",
        "\\end{bmatrix}\\tag{4} $$and        $$ x\\_normalized = \\frac{x}{\\| x\\|} = \\begin{bmatrix}\n",
        "    0 & \\frac{3}{5} & \\frac{4}{5} \\\\\n",
        "    \\frac{2}{\\sqrt{56}} & \\frac{6}{\\sqrt{56}} & \\frac{4}{\\sqrt{56}} \\\\\n",
        "\\end{bmatrix}\\tag{5}$$ Note that you can divide matrices of different sizes and it works fine: this is called broadcasting and you're going to learn about it in part 5.\n",
        "\n",
        "\n",
        "#### <font color=blue> **Exercise 5**: </font> Implement normalizeRows() to normalize the rows of a matrix. After applying this function to an input matrix x, each row of x should be a vector of unit length (meaning length 1)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Usyl7O8rOqkm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: normalizeRows\n",
        "\n",
        "def normalizeRows(x):\n",
        "    \"\"\"\n",
        "    Implement a function that normalizes each row of the matrix x (to have unit length).\n",
        "    \n",
        "    Argument:\n",
        "    x -- A numpy matrix of shape (n, m)\n",
        "    \n",
        "    Returns:\n",
        "    x -- The normalized (by row) numpy matrix. You are allowed to modify x.\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 2 lines of code)\n",
        "    # Compute x_norm as the norm 2 of x. Use np.linalg.norm(..., ord = 2, axis = ..., keepdims = True)\n",
        "    x_norm = np.linalg.norm(x,ord = 2,axis = 1,keepdims = True)\n",
        "    \n",
        "    # Divide x by its norm.\n",
        "    x = x / x_norm\n",
        "    ### END CODE HERE ###\n",
        "\n",
        "    return x"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H5aTHQedHhlS",
        "colab_type": "code",
        "outputId": "d8d500b0-2d71-4749-95f9-f383c5f86064",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        }
      },
      "source": [
        "x = np.array([\n",
        "    [0, 3, 4],\n",
        "    [1, 6, 4]])\n",
        "print(\"normalizeRows(x) = \" + str(normalizeRows(x)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "normalizeRows(x) = [[0.         0.6        0.8       ]\n",
            " [0.13736056 0.82416338 0.54944226]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AuHTAuBjHhlU",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "\n",
        "<table style=\"width:60%\">\n",
        "\n",
        "     <tr> \n",
        "       <td> **normalizeRows(x)** </td> \n",
        "       <td> [[ 0.          0.6         0.8       ]\n",
        " [ 0.13736056  0.82416338  0.54944226]]</td> \n",
        "     </tr>\n",
        "    \n",
        "   \n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SOJdPaKrHhlV",
        "colab_type": "text"
      },
      "source": [
        "**Note**:\n",
        "In normalizeRows(), you can try to print the shapes of x_norm and x, and then rerun the assessment. You'll find out that they have different shapes. This is normal given that x_norm takes the norm of each row of x. So x_norm has the same number of rows but only 1 column. So how did it work when you divided x by x_norm? This is called broadcasting and we'll talk about it now! "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MQJfFXuEHhlV",
        "colab_type": "text"
      },
      "source": [
        "### 1.5 - Broadcasting and the softmax function ####\n",
        "A very important concept to understand in numpy is \"broadcasting\". It is very useful for performing mathematical operations between arrays of different shapes. For the full details on broadcasting, you can read the official [broadcasting documentation](http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WFS2dSWfHhlW",
        "colab_type": "text"
      },
      "source": [
        "#### <font color=blue> **Exercise 6**: </font> Implement a softmax function using numpy. You can think of softmax as a normalizing function used when your algorithm needs to classify two or more classes. You will learn more about softmax in the second course of this specialization.\n",
        "\n",
        "**Instructions**:\n",
        "- $ \\text{for } x \\in \\mathbb{R}^{1\\times n} \\text{,     } softmax(x) = softmax(\\begin{bmatrix}\n",
        "    x_1  &&\n",
        "    x_2 &&\n",
        "    ...  &&\n",
        "    x_n  \n",
        "\\end{bmatrix}) = \\begin{bmatrix}\n",
        "     \\frac{e^{x_1}}{\\sum_{j}e^{x_j}}  &&\n",
        "    \\frac{e^{x_2}}{\\sum_{j}e^{x_j}}  &&\n",
        "    ...  &&\n",
        "    \\frac{e^{x_n}}{\\sum_{j}e^{x_j}} \n",
        "\\end{bmatrix} $ \n",
        "\n",
        "- $\\text{for a matrix } x \\in \\mathbb{R}^{m \\times n} \\text{,  $x_{ij}$ maps to the element in the $i^{th}$ row and $j^{th}$ column of $x$, thus we have: }$  $$softmax(x) = softmax\\begin{bmatrix}\n",
        "    x_{11} & x_{12} & x_{13} & \\dots  & x_{1n} \\\\\n",
        "    x_{21} & x_{22} & x_{23} & \\dots  & x_{2n} \\\\\n",
        "    \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n",
        "    x_{m1} & x_{m2} & x_{m3} & \\dots  & x_{mn}\n",
        "\\end{bmatrix} = \\begin{bmatrix}\n",
        "    \\frac{e^{x_{11}}}{\\sum_{j}e^{x_{1j}}} & \\frac{e^{x_{12}}}{\\sum_{j}e^{x_{1j}}} & \\frac{e^{x_{13}}}{\\sum_{j}e^{x_{1j}}} & \\dots  & \\frac{e^{x_{1n}}}{\\sum_{j}e^{x_{1j}}} \\\\\n",
        "    \\frac{e^{x_{21}}}{\\sum_{j}e^{x_{2j}}} & \\frac{e^{x_{22}}}{\\sum_{j}e^{x_{2j}}} & \\frac{e^{x_{23}}}{\\sum_{j}e^{x_{2j}}} & \\dots  & \\frac{e^{x_{2n}}}{\\sum_{j}e^{x_{2j}}} \\\\\n",
        "    \\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n",
        "    \\frac{e^{x_{m1}}}{\\sum_{j}e^{x_{mj}}} & \\frac{e^{x_{m2}}}{\\sum_{j}e^{x_{mj}}} & \\frac{e^{x_{m3}}}{\\sum_{j}e^{x_{mj}}} & \\dots  & \\frac{e^{x_{mn}}}{\\sum_{j}e^{x_{mj}}}\n",
        "\\end{bmatrix} = \\begin{pmatrix}\n",
        "    softmax\\text{(first row of x)}  \\\\\n",
        "    softmax\\text{(second row of x)} \\\\\n",
        "    ...  \\\\\n",
        "    softmax\\text{(last row of x)} \\\\\n",
        "\\end{pmatrix} $$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JDB4KRkeHhlW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: softmax\n",
        "\n",
        "def softmax(x):\n",
        "    \"\"\"Calculates the softmax for each row of the input x.\n",
        "\n",
        "    Your code should work for a row vector and also for matrices of shape (n, m).\n",
        "\n",
        "    Argument:\n",
        "    x -- A numpy matrix of shape (n,m)\n",
        "\n",
        "    Returns:\n",
        "    s -- A numpy matrix equal to the softmax of x, of shape (n,m)\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 3 lines of code)\n",
        "    # Apply exp() element-wise to x. Use np.exp(...).\n",
        "    x_exp = np.exp(x)\n",
        "    # Create a vector x_sum that sums each row of x_exp. Use np.sum(..., axis = 1, keepdims = True).\n",
        "    x_sum = np.sum(x_exp,axis = 1,keepdims = True)\n",
        "    \n",
        "    # Compute softmax(x) by dividing x_exp by x_sum. It should automatically use numpy broadcasting.\n",
        "    s = x_exp / x_sum\n",
        "\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return s"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ae-AeqXwHhlY",
        "colab_type": "code",
        "outputId": "b4b67737-2bd5-4deb-b697-74e71cd50463",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 82
        }
      },
      "source": [
        "x = np.array([\n",
        "    [9, 2, 5, 0, 0],\n",
        "    [7, 5, 0, 0 ,0]])\n",
        "print(\"softmax(x) = \" + str(softmax(x)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "softmax(x) = [[9.80897665e-01 8.94462891e-04 1.79657674e-02 1.21052389e-04\n",
            "  1.21052389e-04]\n",
            " [8.78679856e-01 1.18916387e-01 8.01252314e-04 8.01252314e-04\n",
            "  8.01252314e-04]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BZv9pdBHHhlb",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**:\n",
        "\n",
        "<table style=\"width:60%\">\n",
        "\n",
        "     <tr> \n",
        "       <td> **softmax(x)** </td> \n",
        "       <td> [[  9.80897665e-01   8.94462891e-04   1.79657674e-02   1.21052389e-04\n",
        "    1.21052389e-04]\n",
        " [  8.78679856e-01   1.18916387e-01   8.01252314e-04   8.01252314e-04\n",
        "    8.01252314e-04]]</td> \n",
        "     </tr>\n",
        "</table>\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "556wNi3fHhlc",
        "colab_type": "text"
      },
      "source": [
        "**Note**:\n",
        "- If you print the shapes of x_exp, x_sum and s above and rerun the assessment cell, you will see that x_sum is of shape (2,1) while x_exp and s are of shape (2,5). **x_exp/x_sum** works due to python broadcasting.\n",
        "\n",
        "Congratulations! You now have a pretty good understanding of python numpy and have implemented a few useful functions that you will be using in deep learning."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lr-Dh00SHhlc",
        "colab_type": "text"
      },
      "source": [
        "<font color='blue'>\n",
        "**What you need to remember:**\n",
        "- np.exp(x) works for any np.array x and applies the exponential function to every coordinate\n",
        "- the sigmoid function and its gradient\n",
        "- image2vector is commonly used in deep learning\n",
        "- np.reshape is widely used. In the future, you'll see that keeping your matrix/vector dimensions straight will go toward eliminating a lot of bugs. \n",
        "- numpy has efficient built-in functions\n",
        "- broadcasting is extremely useful"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "collapsed": true,
        "id": "_kDVjCQ9Hhle",
        "colab_type": "text"
      },
      "source": [
        "## 2) Vectorization"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d96GQmfsHhlf",
        "colab_type": "text"
      },
      "source": [
        "\n",
        "In deep learning, you deal with very large datasets. Hence, a non-computationally-optimal function can become a huge bottleneck in your algorithm and can result in a model that takes ages to run. To make sure that your code is  computationally efficient, you will use vectorization. For example, try to tell the difference between the following implementations of the dot/outer/elementwise product."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6wbNKMJYHhlg",
        "colab_type": "code",
        "outputId": "ad651536-fe2d-49d0-fd1b-e9c265f3378a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 375
        }
      },
      "source": [
        "import time\n",
        "\n",
        "x1 = [9, 2, 5, 0, 0, 7, 5, 0, 0, 0, 9, 2, 5, 0, 0]\n",
        "x2 = [9, 2, 2, 9, 0, 9, 2, 5, 0, 0, 9, 2, 5, 0, 0]\n",
        "\n",
        "### CLASSIC DOT PRODUCT OF VECTORS IMPLEMENTATION ###\n",
        "tic = time.process_time()\n",
        "dot = 0\n",
        "for i in range(len(x1)):\n",
        "    dot+= x1[i]*x2[i]\n",
        "toc = time.process_time()\n",
        "print (\"dot = \" + str(dot) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### CLASSIC OUTER PRODUCT IMPLEMENTATION ###\n",
        "tic = time.process_time()\n",
        "outer = np.zeros((len(x1),len(x2))) # we create a len(x1)*len(x2) matrix with only zeros\n",
        "for i in range(len(x1)):\n",
        "    for j in range(len(x2)):\n",
        "        outer[i,j] = x1[i]*x2[j]\n",
        "toc = time.process_time()\n",
        "print (\"outer = \" + str(outer) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### CLASSIC ELEMENTWISE IMPLEMENTATION ###\n",
        "tic = time.process_time()\n",
        "mul = np.zeros(len(x1))\n",
        "for i in range(len(x1)):\n",
        "    mul[i] = x1[i]*x2[i]\n",
        "toc = time.process_time()\n",
        "print (\"elementwise multiplication = \" + str(mul) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### CLASSIC GENERAL DOT PRODUCT IMPLEMENTATION ###\n",
        "W = np.random.rand(3,len(x1)) # Random 3*len(x1) numpy array\n",
        "tic = time.process_time()\n",
        "gdot = np.zeros(W.shape[0])\n",
        "for i in range(W.shape[0]):\n",
        "    for j in range(len(x1)):\n",
        "        gdot[i] += W[i,j]*x1[j]\n",
        "toc = time.process_time()\n",
        "print (\"gdot = \" + str(gdot) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dot = 278\n",
            " ----- Computation time = 0.07354800000003436ms\n",
            "outer = [[81. 18. 18. 81.  0. 81. 18. 45.  0.  0. 81. 18. 45.  0.  0.]\n",
            " [18.  4.  4. 18.  0. 18.  4. 10.  0.  0. 18.  4. 10.  0.  0.]\n",
            " [45. 10. 10. 45.  0. 45. 10. 25.  0.  0. 45. 10. 25.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [63. 14. 14. 63.  0. 63. 14. 35.  0.  0. 63. 14. 35.  0.  0.]\n",
            " [45. 10. 10. 45.  0. 45. 10. 25.  0.  0. 45. 10. 25.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [81. 18. 18. 81.  0. 81. 18. 45.  0.  0. 81. 18. 45.  0.  0.]\n",
            " [18.  4.  4. 18.  0. 18.  4. 10.  0.  0. 18.  4. 10.  0.  0.]\n",
            " [45. 10. 10. 45.  0. 45. 10. 25.  0.  0. 45. 10. 25.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]\n",
            " [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]\n",
            " ----- Computation time = 0.2351460000000749ms\n",
            "elementwise multiplication = [81.  4. 10.  0.  0. 63. 10.  0.  0.  0. 81.  4. 25.  0.  0.]\n",
            " ----- Computation time = 0.17119599999992907ms\n",
            "gdot = [27.63494848 24.51883854 27.52447059]\n",
            " ----- Computation time = 0.23765600000014153ms\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRxkUiRaHhlh",
        "colab_type": "code",
        "outputId": "5b775d79-49f8-4db1-d14f-71b904b70b94",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 375
        }
      },
      "source": [
        "x1 = [9, 2, 5, 0, 0, 7, 5, 0, 0, 0, 9, 2, 5, 0, 0]\n",
        "x2 = [9, 2, 2, 9, 0, 9, 2, 5, 0, 0, 9, 2, 5, 0, 0]\n",
        "\n",
        "### VECTORIZED DOT PRODUCT OF VECTORS ###\n",
        "tic = time.process_time()\n",
        "dot = np.dot(x1,x2)\n",
        "toc = time.process_time()\n",
        "print (\"dot = \" + str(dot) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### VECTORIZED OUTER PRODUCT ###\n",
        "tic = time.process_time()\n",
        "outer = np.outer(x1,x2)\n",
        "toc = time.process_time()\n",
        "print (\"outer = \" + str(outer) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### VECTORIZED ELEMENTWISE MULTIPLICATION ###\n",
        "tic = time.process_time()\n",
        "mul = np.multiply(x1,x2)\n",
        "toc = time.process_time()\n",
        "print (\"elementwise multiplication = \" + str(mul) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")\n",
        "\n",
        "### VECTORIZED GENERAL DOT PRODUCT ###\n",
        "tic = time.process_time()\n",
        "dot = np.dot(W,x1)\n",
        "toc = time.process_time()\n",
        "print (\"gdot = \" + str(dot) + \"\\n ----- Computation time = \" + str(1000*(toc - tic)) + \"ms\")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "dot = 278\n",
            " ----- Computation time = 0.13656300000031152ms\n",
            "outer = [[81 18 18 81  0 81 18 45  0  0 81 18 45  0  0]\n",
            " [18  4  4 18  0 18  4 10  0  0 18  4 10  0  0]\n",
            " [45 10 10 45  0 45 10 25  0  0 45 10 25  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [63 14 14 63  0 63 14 35  0  0 63 14 35  0  0]\n",
            " [45 10 10 45  0 45 10 25  0  0 45 10 25  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [81 18 18 81  0 81 18 45  0  0 81 18 45  0  0]\n",
            " [18  4  4 18  0 18  4 10  0  0 18  4 10  0  0]\n",
            " [45 10 10 45  0 45 10 25  0  0 45 10 25  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]\n",
            " [ 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0]]\n",
            " ----- Computation time = 0.1611240000001235ms\n",
            "elementwise multiplication = [81  4 10  0  0 63 10  0  0  0 81  4 25  0  0]\n",
            " ----- Computation time = 0.08877299999987542ms\n",
            "gdot = [27.63494848 24.51883854 27.52447059]\n",
            " ----- Computation time = 0.2759849999998121ms\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mT6tTsSCHhlj",
        "colab_type": "text"
      },
      "source": [
        "As you may have noticed, the vectorized implementation is much cleaner and more efficient. For bigger vectors/matrices, the differences in running time become even bigger. \n",
        "\n",
        "**Note** that `np.dot()` performs a matrix-matrix or matrix-vector multiplication. This is different from `np.multiply()` and the `*` operator (which is equivalent to  `.*` in Matlab/Octave), which performs an element-wise multiplication."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wtZTJ5fcHhlk",
        "colab_type": "text"
      },
      "source": [
        "### 2.1 Implement the L1 and L2 loss functions\n",
        "\n",
        "#### <font color=blue> **Exercise 7**: </font> Implement the numpy vectorized version of the L1 loss. You may find the function abs(x) (absolute value of x) useful.\n",
        "\n",
        "**Reminder**:\n",
        "- The loss is used to evaluate the performance of your model. The bigger your loss is, the more different your predictions ($ \\hat{y} $) are from the true values ($y$). In deep learning, you use optimization algorithms like Gradient Descent to train your model and to minimize the cost.\n",
        "- L1 loss is defined as:\n",
        "$$\\begin{align*} & L_1(\\hat{y}, y) = \\sum_{i=0}^m|y^{(i)} - \\hat{y}^{(i)}| \\end{align*}\\tag{6}$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZGEKCrvnHhlk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: L1\n",
        "\n",
        "def L1(yhat, y):\n",
        "    \"\"\"\n",
        "    Arguments:\n",
        "    yhat -- vector of size m (predicted labels)\n",
        "    y -- vector of size m (true labels)\n",
        "    \n",
        "    Returns:\n",
        "    loss -- the value of the L1 loss function defined above\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 1 line of code)\n",
        "    loss = np.sum(np.abs(yhat-y),axis = 0)\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return loss"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iaAMe_MeHhlm",
        "colab_type": "code",
        "outputId": "6fe3423b-2ea6-4cab-e5a3-6907800b11ff",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "yhat = np.array([.9, 0.2, 0.1, .4, .9])\n",
        "y = np.array([1, 0, 0, 1, 1])\n",
        "print(\"L1 = \" + str(L1(yhat,y)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "L1 = 1.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SSxO7KFNHhlp",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**:\n",
        "\n",
        "<table style=\"width:20%\">\n",
        "\n",
        "     <tr> \n",
        "       <td> **L1** </td> \n",
        "       <td> 1.1 </td> \n",
        "     </tr>\n",
        "</table>\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_bn5qa9sHhlq",
        "colab_type": "text"
      },
      "source": [
        "#### <font color=blue> **Exercise 8**: </font> Implement the numpy vectorized version of the L2 loss. There are several way of implementing the L2 loss but you may find the function np.dot() useful. As a reminder, if $x = [x_1, x_2, ..., x_n]$, then `np.dot(x,x)` = $\\sum_{j=0}^n x_j^{2}$. \n",
        "\n",
        "- L2 loss is defined as $$\\begin{align*} & L_2(\\hat{y},y) = \\sum_{i=0}^m(y^{(i)} - \\hat{y}^{(i)})^2 \\end{align*}\\tag{7}$$"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "chbyKZneHhlq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# GRADED FUNCTION: L2\n",
        "\n",
        "def L2(yhat, y):\n",
        "    \"\"\"\n",
        "    Arguments:\n",
        "    yhat -- vector of size m (predicted labels)\n",
        "    y -- vector of size m (true labels)\n",
        "    \n",
        "    Returns:\n",
        "    loss -- the value of the L2 loss function defined above\n",
        "    \"\"\"\n",
        "    \n",
        "    ### START CODE HERE ### (≈ 1 line of code)\n",
        "    loss = np.dot(np.abs(yhat-y),np.abs(yhat-y))\n",
        "    ### END CODE HERE ###\n",
        "    \n",
        "    return loss"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lhSQiw78Hhlt",
        "colab_type": "code",
        "outputId": "41f2d8c6-11f7-4518-9acd-6d01799bddde",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        }
      },
      "source": [
        "yhat = np.array([.9, 0.2, 0.1, .4, .9])\n",
        "y = np.array([1, 0, 0, 1, 1])\n",
        "print(\"L2 = \" + str(L2(yhat,y)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "L2 = 0.43\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sjycE9tYHhlu",
        "colab_type": "text"
      },
      "source": [
        "**Expected Output**: \n",
        "<table style=\"width:20%\">\n",
        "     <tr> \n",
        "       <td> **L2** </td> \n",
        "       <td> 0.43 </td> \n",
        "     </tr>\n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EL2GRSGgHhlv",
        "colab_type": "text"
      },
      "source": [
        "Congratulations on completing this assignment. We hope that this little warm-up exercise helps you in the future assignments, which will be more exciting and interesting!"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bjC-UhULHhlv",
        "colab_type": "text"
      },
      "source": [
        "<font color='green'>\n",
        "**What to remember:**\n",
        "- Vectorization is very important in deep learning. It provides computational efficiency and clarity.\n",
        "- You have reviewed the L1 and L2 loss.\n",
        "- You are familiar with many numpy functions such as np.sum, np.dot, np.multiply, np.maximum, etc..."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nDQuKmqSHhlw",
        "colab_type": "text"
      },
      "source": [
        "#### <font color=blue> **Exercise 9**: </font>   $$f(x,y) = x^3 - 6x^2 + 12x + y^3 + 9y^2 + 27y +19$$  \n",
        "\n",
        "- Generate a graph of the using ipywidgets, so we can explore the surface\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d2CgXnJsMyNo",
        "colab_type": "code",
        "outputId": "38a4dfab-3034-4714-c049-8b04e613a2ac",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 796,
          "referenced_widgets": [
            "88cd31dfd2c745329e7e60a02fd10125",
            "d14ab764206546b09235192d63dfbdae",
            "2e35136e076d4e999731e2cbac86fd6f",
            "e565a7ed80e84209a67849768ad227f4",
            "665d318384224c6bbbeb3451d0e78af6",
            "a14588d778324b3a84d29398009515a9",
            "54e892acfa96419294c5e6dd197eed03",
            "f8cfda3f065942aba02c6a57ef3c8925",
            "6e4ee81400694e1aba74774354e2448d"
          ]
        }
      },
      "source": [
        "from mpl_toolkits import mplot3d\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "x = np.outer(np.linspace(-10, 10, 1000), np.ones(1000))\n",
        "y = np.outer(np.ones(1000), np.linspace(-5, 15, 1000))\n",
        "#y = x.copy().T # transpose\n",
        "z = x ** 3 - 6*x ** 2 + 12*x + y ** 3 + 9*x ** 2 + 27*y + 19\n",
        "\n",
        "def rot_plot(a,b):\n",
        "    # Now let us take a look how the model is doing:\n",
        "    fig = plt.figure(figsize=plt.figaspect(.5))\n",
        "    fig = plt.figure(figsize=(12,12))\n",
        "    ax = plt.axes(projection='3d')\n",
        "    ax.view_init(10, 50)\n",
        "\n",
        "    sc = ax.plot_surface(x, y, z,cmap='viridis', edgecolor='#D0D0D0')\n",
        "    ax.set_title('$f(x,y)=x^3-6x^2+12x++y^3+9y^2+27y+19$')\n",
        "    ax.set_xlabel(\"X\")\n",
        "    ax.set_ylabel(\"Y\")\n",
        "    ax.set_zlabel(\"Z\")\n",
        "    ax.view_init(a, b)\n",
        "    plt.colorbar(sc, aspect = 3)\n",
        "\n",
        "    plt.show()\n",
        "\n",
        "%pylab inline\n",
        "import ipywidgets\n",
        "\n",
        "widget = ipywidgets\n",
        "widget.interact(rot_plot,\n",
        "                 a=widget.IntSlider(min=-180, max=180,description='Angle 1', step=10, value = 20),\n",
        "                 b=widget.IntSlider(min=-180, max=180,description='Angle 2', step=10, value = 50))"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Populating the interactive namespace from numpy and matplotlib\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "88cd31dfd2c745329e7e60a02fd10125",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=20, description='Angle 1', max=180, min=-180, step=10), IntSlider(value=…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function __main__.rot_plot>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ocWHJ-P7Hhlw",
        "colab_type": "text"
      },
      "source": [
        "#### <font color=blue> **Exercise 10**: </font>  $$f(x,y) = x^3 - 6x^2 + 12x + y^3 + 9y^2 + 27y +19$$  \n",
        "\n",
        "- Write the gradient of the funxtion\n",
        "- Implement gradient descent algorithm to find at least one minimum value of this fucntion"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zIpRZa8k79va",
        "colab_type": "code",
        "outputId": "0535e94a-3b4f-4039-8a06-6aabfb4b2853",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 131
        }
      },
      "source": [
        "X = np.ones(2)\n",
        "alpha = 0.01\n",
        "\n",
        "grad = np.array([3*X[0]*X[0]-12*X[0]+12, 3*X[1]*X[1]+18*X[1]+27])\n",
        "#print(grad)\n",
        "for i in range(400):\n",
        "    grad = np.array([3*X[0]*X[0]-12*X[0]+12, 3*X[1]*X[1]+18*X[1]+27])\n",
        "    X = X - alpha*grad\n",
        "    if (i%100 == 0):\n",
        "        print(\"Aproximate Solution at iteration {} is {}\".format(i, X))\n",
        "print(\"after {} iteratios the approxiamte solution is {}\".format(i,X))"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Aproximate Solution at iteration 0 is [0.97 0.52]\n",
            "Aproximate Solution at iteration 100 is [       -inf -2.70236116]\n",
            "Aproximate Solution at iteration 200 is [       -inf -2.84323746]\n",
            "Aproximate Solution at iteration 300 is [       -inf -2.89351165]\n",
            "after 399 iteratios the approxiamte solution is [       -inf -2.91915255]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: RuntimeWarning: overflow encountered in double_scalars\n",
            "  import sys\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}
